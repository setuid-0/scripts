#!/bin/bash
#
################################################################
# Desarrollado por UID0                                        # 
# Script analiza componentes de servicio ApacheCamel / rhFuse  #
# asigna tiempos de acuerdo a complejidad                      #
# el resultado es en horas                                     # 
################################################################

# Directorio base
BASE_DIR="$1"

# Validar que se proporcione la ruta base
if [ -z "$BASE_DIR" ]; then
  echo "Uso: $0 <ruta_base_del_proyecto>"
  exit 1
fi

# Inicializar contadores
JAVA_FILES=0
MANUAL_JAVA_FILES=0
TOTAL_LINES=0
MANUAL_LINES=0
ROUTES=0
FROM_SOAP=0
FROM_REST=0
FROM_QUEUE=0
SQL_QUERIES=0
SQL_STORED=0
SET_HEADER=0
SET_BODY=0
CONVERT_BODY_TO=0
SET_PROPERTY=0
BEAN_JAVA=0
PROCESSORS=0
MARSHAL_JAVA=0
UNMARSHAL_JAVA=0
EXCEPTIONS=0
BLUEPRINT_BEANS=0
BLUEPRINT_MARSHAL=0
BLUEPRINT_UNMARSHAL=0

# Buscar archivos Java
JAVA_FILES=$(find "$BASE_DIR" -name "*.java" | wc -l)

# Contar líneas de código Java manual
for FILE in $(find "$BASE_DIR" -name "*.java"); do
  LINES=$(wc -l < "$FILE")
  AUTO_GEN=$(grep -c -E "(Generated by|AUTO-GENERATED|Do not edit)" "$FILE")
  if [ "$AUTO_GEN" -eq 0 ]; then
    MANUAL_JAVA_FILES=$((MANUAL_JAVA_FILES + 1))
    MANUAL_LINES=$((MANUAL_LINES + LINES))
  fi
  TOTAL_LINES=$((TOTAL_LINES + LINES))
done

# Calcular ratio de código manual
if [ "$MANUAL_JAVA_FILES" -gt 0 ]; then
  RATIO_SRC=$(echo "scale=2; $MANUAL_LINES / $MANUAL_JAVA_FILES" | bc)
else
  RATIO_SRC=0
fi

# Analizar rutas Camel y componentes Java
ROUTES=$(grep -r "from(" "$BASE_DIR" | wc -l)
FROM_SOAP=$(grep -r 'from("cxf:' "$BASE_DIR" | wc -l)
FROM_REST=$(grep -r 'from("rest:' "$BASE_DIR" | wc -l)
FROM_QUEUE=$(grep -r 'from("jms:' "$BASE_DIR" | wc -l)
SQL_QUERIES=$(grep -r 'to("sql:' "$BASE_DIR" | wc -l)
SQL_STORED=$(grep -r 'to("sql:' "$BASE_DIR" | grep -i "stored" | wc -l)
SET_HEADER=$(grep -r "<setHeader" "$BASE_DIR" | wc -l)
SET_BODY=$(grep -r "<setBody" "$BASE_DIR" | wc -l)
CONVERT_BODY_TO=$(grep -r ".convertBodyTo " "$BASE_DIR" | wc -l)
SET_PROPERTY=$(grep -r ".setProperty " "$BASE_DIR" | wc -l)
BEAN_JAVA=$(grep -r "<bean " "$BASE_DIR" | wc -l)
PROCESSORS=$(grep -r "<process" "$BASE_DIR" | wc -l)
MARSHAL_JAVA=$(grep -r "<marshal " "$BASE_DIR" | wc -l)
UNMARSHAL_JAVA=$(grep -r "<unmarshal " "$BASE_DIR" | wc -l)
EXCEPTIONS=$(grep -r "<onException " "$BASE_DIR" | wc -l)

# Buscar archivos blueprint.xml en todas las ubicaciones
BLUEPRINT_FILES=$(find "$BASE_DIR" -type f -name "blueprint.xml")

# Procesar cada archivo blueprint encontrado
for FILE in $BLUEPRINT_FILES; do
  echo "Analizando archivo blueprint.xml en: $FILE"
  BEANS=$(grep -o "<bean" "$FILE" | wc -l)
  ROUTES_BLUEPRINT=$(grep -o "<route" "$FILE" | wc -l)
  MARSHAL=$(grep -o "<marshal" "$FILE" | wc -l)
  UNMARSHAL=$(grep -o "<unmarshal" "$FILE" | wc -l)
  BLUEPRINT_BEANS=$((BLUEPRINT_BEANS + BEANS))
  BLUEPRINT_MARSHAL=$((BLUEPRINT_MARSHAL + MARSHAL))
  BLUEPRINT_UNMARSHAL=$((BLUEPRINT_UNMARSHAL + UNMARSHAL))
  ROUTES=$((ROUTES + ROUTES_BLUEPRINT))
done

# Ponderaciones
PONDERACION_JAVA_FILES=0.55
PONDERACION_RATIO_SRC=0.01
PONDERACION_ROUTES=1
PONDERACION_SOAP=0.5
PONDERACION_REST=0.5
PONDERACION_QUEUE=0.5
PONDERACION_SQL=0.5
PONDERACION_SQL_STORED=0.5
PONDERACION_SET_HEADER=0.2
PONDERACION_SET_BODY=0.2
PONDERACION_CONVERT_BODY_TO=0.2
PONDERACION_SET_PROPERTY=0.2
PONDERACION_BEAN=0.4
PONDERACION_PROCESS=0.2
PONDERACION_UNMARSHAL=0.2
PONDERACION_MARSHAL=0.2
PONDERACION_EXCEPCIONES=0.2
PONDERACION_BLUEPRINT_BEANS=0.4
PONDERACION_BLUEPRINT_MARSHAL=0.2
PONDERACION_BLUEPRINT_UNMARSHAL=0.2

# Cálculo de suma total ponderada
SUMA_TOTAL=$(echo "$JAVA_FILES * $PONDERACION_JAVA_FILES + $RATIO_SRC * $PONDERACION_RATIO_SRC + $ROUTES * $PONDERACION_ROUTES + $FROM_SOAP * $PONDERACION_SOAP + $FROM_REST * $PONDERACION_REST + $FROM_QUEUE * $PONDERACION_QUEUE + $SQL_QUERIES * $PONDERACION_SQL + $SQL_STORED * $PONDERACION_SQL_STORED + $SET_HEADER * $PONDERACION_SET_HEADER + $SET_BODY * $PONDERACION_SET_BODY + $CONVERT_BODY_TO * $PONDERACION_CONVERT_BODY_TO + $SET_PROPERTY * $PONDERACION_SET_PROPERTY + $BEAN_JAVA * $PONDERACION_BEAN + $PROCESSORS * $PONDERACION_PROCESS + $UNMARSHAL_JAVA * $PONDERACION_UNMARSHAL + $MARSHAL_JAVA * $PONDERACION_MARSHAL + $EXCEPTIONS * $PONDERACION_EXCEPCIONES + $BLUEPRINT_BEANS * $PONDERACION_BLUEPRINT_BEANS + $BLUEPRINT_MARSHAL * $PONDERACION_BLUEPRINT_MARSHAL + $BLUEPRINT_UNMARSHAL * $PONDERACION_BLUEPRINT_UNMARSHAL" | bc)

# Tiempo de Documentación (Estimado 10%)
DOCUMENTACION=$(echo "$SUMA_TOTAL * 0.1"|bc)
#
# Tiempo de Pruebas (Estimado 40%)
PRUEBAS=$(echo "$SUMA_TOTAL * 0.4"|bc)
#
# Tiempo Total Estimado
TIME_TOTAL=$(echo "$SUMA_TOTAL + $PRUEBAS + $DOCUMENTACION"|bc)
# Generar tabla de resultados
echo -e "Estructura\tComponente\tDetalle/Observación"
echo -e "ARQUETIPO\tJAVA FILES\t$JAVA_FILES archivos Java desarrollados."
echo -e "ARQUETIPO\tRATIO-SRC\t$RATIO_SRC líneas promedio por archivo manual."
echo -e "ROUTE\tRoutes\t$ROUTES rutas definidas."
echo -e "FROM (EXTERNOS)\tSOAP\t$FROM_SOAP puntos de entrada SOAP."
echo -e "FROM (EXTERNOS)\tREST\t$FROM_REST puntos de entrada REST."
echo -e "FROM (EXTERNOS)\tQUEUE\t$FROM_QUEUE puntos de entrada desde colas."
echo -e "COMPONENTS\tSQL Queries\t$SQL_QUERIES interacciones con SQL."
echo -e "COMPONENTS\tSQL Stored\t$SQL_STORED procedimientos almacenados."
echo -e "COMPONENTS\tSetHeader\t$SET_HEADER instancias de transformación."
echo -e "COMPONENTS\tSetBody\t$SET_BODY instancias de transformación."
echo -e "COMPONENTS\tConvertBodyTo\t$CONVERT_BODY_TO instancias detectadas."
echo -e "COMPONENTS\tSetProperty\t$SET_PROPERTY instancias detectadas."
echo -e "COMPONENTS\tBean (Java)\t$BEAN_JAVA beans personalizados invocados."
echo -e "COMPONENTS\tProcessors\t$PROCESSORS procesadores personalizados."
echo -e "COMPONENTS\tMarshal (Java)\t$MARSHAL_JAVA serializaciones configuradas."
echo -e "COMPONENTS\tUnmarshal (Java)\t$UNMARSHAL_JAVA deserializaciones configuradas."
echo -e "COMPONENTS\tMarshal (Blueprint)\t$BLUEPRINT_MARSHAL serializaciones configuradas en blueprint.xml."
echo -e "COMPONENTS\tUnmarshal (Blueprint)\t$BLUEPRINT_UNMARSHAL deserializaciones configuradas en blueprint.xml."
echo -e "COMPONENTS\tBlueprint Beans\t$BLUEPRINT_BEANS beans configurados en blueprint.xml."
echo -e "COMPONENTS\tExcepciones\t$EXCEPTIONS bloques onException configurados."
echo -e "\nTiempo Desarrollo Estimado: $SUMA_TOTAL"
echo -e "\e[1;38mTiempo Total Estimado: $TIME_TOTAL (Considerando Pruebas por QA y Documentación)\e[0m\n\n"
